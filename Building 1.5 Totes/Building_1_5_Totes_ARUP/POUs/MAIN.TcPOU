<?xml version="1.0" encoding="utf-8"?>
<TcPlcObject Version="1.1.0.1" ProductVersion="3.1.4024.4">
  <POU Name="MAIN" Id="{ab7dc2f3-ced4-4bc2-b014-faadd6d7bd53}" SpecialFunc="None">
    <Declaration><![CDATA[PROGRAM MAIN
VAR
	// Data persistence configuration
	rStartPersistentSave 		: R_TRIG; // Rising edge trigger to start persistent data save
	fbWritePersistentData 		: WritePersistentData;
	tonPersistentSave	:	TON := (PT := T#1M);
	tpBroadcastSave		:	TP	:= (PT := T#100MS);
	PLCPersistentSave			AT %Q*	: BOOL;
	ADSPort						:	UINT := 0;
	In_ResetAllMetrics			: 	BOOL;
END_VAR
VAR PERSISTENT
	EAP_205 : ST_EAP_DEVICE ;	
END_VAR]]></Declaration>
    <Implementation>
      <ST><![CDATA[SystemSafety();
BarCodeReaders();
CommStatus();
Solenoids();
Conveyors();
Sorter();
Log_Diverts_P2140();
Log_Diverts_P2150();
Photoeyes();
ProxSensors();
ServerControl();
Singulation_Control();
System();
P_PulseCountDist();
GVL_IO.INIT := FALSE;


// Reset when Timer is Done
tonPersistentSave(IN := NOT tpBroadcastSave.Q);

// Catch the .Q of the persistent save timer to trigger a save pulse
tpBroadcastSave(IN := tonPersistentSave.Q);
// Set the Persistent save outputs to the .Q of the pulse
PLCPersistentSave := tpBroadcastSave.Q;

// Check for persistent item save
//rStartPersistentSave(CLK := tpBroadcastSave.Q);
// Execute a Persistent save here
// System PORT is 851
fbWritePersistentData(netid:= '', PORT:=851, Start:=tonPersistentSave.Q, tmout:=T#1S);

// Convert HMI EAP IP Address(es) to correct format
MEMCPY(destAddr    := ADR(EAP_205.Publisher.HMI_IPAddrDisp),srcaddr :=ADR(EAP_205.Publisher.IPAddr), n := 4);
IF ((EAP_205.Publisher.HMI_IPAddrDisp[0] <> EAP_205.Publisher.HMI_IPAddr[0]) AND EAP_205.Publisher.HMI_IPAddr[0] > 0)
   OR ((EAP_205.Publisher.HMI_IPAddrDisp[1] <> EAP_205.Publisher.HMI_IPAddr[1]) AND EAP_205.Publisher.HMI_IPAddr[1] > 0)
   OR ((EAP_205.Publisher.HMI_IPAddrDisp[2] <> EAP_205.Publisher.HMI_IPAddr[2]) AND EAP_205.Publisher.HMI_IPAddr[2] > 0)
   OR ((EAP_205.Publisher.HMI_IPAddrDisp[3] <> EAP_205.Publisher.HMI_IPAddr[3]) AND EAP_205.Publisher.HMI_IPAddr[3] > 0)
   THEN
    MEMCPY(destAddr    := ADR(EAP_205.Publisher.IPAddr),srcaddr :=ADR(EAP_205.Publisher.HMI_IPAddr), n := 4);
END_IF]]></ST>
    </Implementation>
  </POU>
</TcPlcObject>